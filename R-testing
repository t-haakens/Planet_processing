# R-testing

library(ggplot2)
list.files(RColorBrewer)
library(rgdal)
library(raster)
library(RStoolbox)

# Set working directory
setwd("R/R_files/R-geospatial-testing")
list.files()

# Testing basic shapefile
shp = readOGR(dsn = ".", layer = "Small_AOI")
plot(shp, col="green", bg="lightblue", lwd=2)

df = fortify(shp)
ggplot()+
  geom_polygon(data=df, aes(x=long, y=lat))+
  theme_bw()+
#------------------

# Testing raster data
r = raster("L1C_20190721_B04.tif")     # Sentinel-2
#r = raster("20190721_AnalyticMS.tif") # PlanetScope

r = aggregate(r, fact=2)
plot(r)

df = as.data.frame(r, xy=T)
ggplot()+
  geom_tile(data=df, aes(x=x, y=y))+
  scale_fill_gradient2(
    low = "red",
    mid = "white",
    high = "blue",
    midpoint = 0,
    space = "Lab",
    na.value = "grey50",
    guide = "colourbar",
    aesthetics = "fill"
  )
#------------------------
 
# Reading Multibandraster and testing For-loops

# Reading in Multiband raster
mbr = brick("L1C_20190721_Bands_2348.tif")
plotRGB(mbr, r=3, g=2, b=1, stretch = 'lin')
par(mfrow = c(1,1))
plotRGB(mbr, r=3, g=2, b=1, stretch = 'lin')
plotRGB(mbr, r=4, g=3, b=2, stretch = 'lin')

# Adding band names to list, for later calculations
names(mbr) = c("blue", "green", "red", "nir")
pairs(mbr, maxpixels = 5000)
hist(mbr$L1C_20190721_Bands_2348.4)

blue <- mbr$blue
green <- mbr$green
red <- mbr$red
nir <- mbr$nir

# Calculating vegetation indices(images)
C1 = 6; C2 = 7.5; L = 1
ndvi = (nir - red)/(nir + red)
evi = -2.5*((nir-red)/(nir+C1*red-C2*blue+L))
msavi2 <- 0.5*(2*nir+1- sqrt(2*nir+1)*2-8*(nir-red))
vegind_list <- c(ndvi, evi, msavi2)

# Calculating vegetation indices(images)
C1 = 6; C2 = 7.5; L = 1
ndvi = (nir - red)/(nir + red)
evi = -2.5*((nir-red)/(nir+C1*red-C2*blue+L))
msavi2 <- 0.5*(2*nir+1- sqrt(2*nir+1)*2-8*(nir-red))
vegind_list <- c(ndvi, evi, msavi2)

plot(ndvi)
plot(ndvi, col=brewer.pal(n = 6, name = "PiYG"))

# For loop test
for (image in c(vegind_list)){
  print("Tada!")
  plot(image)
}

for (image in c(vegind_list)){
  print("Tada!")
  plot(image, col=colorRampPalette(c('red','yellow','green')) (5), main="ndvi, evi, msavi2")
}

# Writing calculated vegetation indices to file Loop
for (image in c(vegind_list)){
  writeRaster(ndvi, "ndvi.tif", NAflag = -999, overwrite = T)
  writeRaster(evi, "evi.tif", NAflag = -999, overwrite = T)
  writeRaster(msavi2, "msavi2.tif", NAflag = -999, overwrite = T)
}

# Basic segmentation/thresholding
forest <- ndvi>=0.7
forest
plot(forest)

non_forest <- ndvi<0.65
plot(non_forest)

par(mfrow=c(1,1))
LULC <- forest + non_forest
LULC
plot(LULC, col=c("red", "green"), legend=TRUE)
#-------------------

# Reading files
setwd("R/R_files/R-geospatial-testing")
getwd()
list.files()

# Find all 'AnalyticMS' files in those Working directory
Planet.series <- list.files(getwd(), pattern="\\AnalyticMS", full.names=FALSE)
head(Planet.series)

# Plot time-series
for (image in Planet.series){
  mbr <- brick(image)
  plotRGB(mbr, r=3, g=2, b=1, stretch = 'lin')
}

mbr.21 = brick("20190721_AnalyticMS.tif")
mbr.26 = brick("20190726_AnalyticMS.tif")

Change = mbr.26 - mbr.21
plot(Change)

# Principal Component Analysis
pca = rasterPCA(mbr.21, nComp = 3)

# Never got this far...
tasseledCap()

# Classification with SupportVectorMachine
classification_svm = superClass()

If time check out:
# R on Remote sensing with Sentinel-2 data: https://github.com/WhyR2020/workshops/blob/master/satellite/whyr_satellite.R
# EBImage package for image analysis
